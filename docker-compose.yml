version: "3.7"
services:
  nginx:
    container_name: nginx
    image: "nginx:alpine"
    volumes:
      -  ./docker-compose/nginx/nginx.conf:/etc/nginx/nginx.conf
      -  ./docker-compose/nginx/laravel.conf:/etc/nginx/conf.d/default.conf
      -  ./docker-compose/nginx/logs:/var/log/nginx
      -  .:${DOCKER_CONTAINER_APPDIR}
    ports:
      - 80:80
    networks:
      -  frontend
    depends_on:
      -  php
    restart: unless-stopped
  php:
    container_name: php
    build: 
      context: .
      args: 
        UID: ${DOCKER_USERID}
      dockerfile: ./docker-compose/php/Dockerfile
    working_dir: ${DOCKER_CONTAINER_APPDIR}
    volumes:
      -  .:${DOCKER_CONTAINER_APPDIR}
    ports:
      -  9000:9000
    depends_on:
      -  mysql
    networks:
      -  frontend
      -  backend
    restart: unless-stopped
  mysql:
    container_name: mysql
    image: mysql:8.0.22
    volumes:
      - ./docker-compose/mysql/data:/var/lib/mysql
    environment:
      MYSQL_DATABASE:  ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    ports:
      -  ${DB_PORT}:3306
    networks:
      -  backend
    tty: true
    restart: unless-stopped
  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin:latest
    depends_on:
      -  mysql
    environment:
      PMA_HOST: mysql
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      PMA_ARBITRARY: 1
    ports:
      - 8000:80
    networks:
      -  frontend
      -  backend
    restart: unless-stopped
networks:
  frontend:
  backend: